"""Initial migration

Revision ID: 0c6aab87f50f
Revises: 
Create Date: 2025-01-07 03:35:59.169411

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0c6aab87f50f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('car_owner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('profile_pic', sa.String(length=200), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('notification_preference', sa.String(length=100), nullable=True),
    sa.Column('payment_preference', sa.String(length=100), nullable=True),
    sa.Column('car_model', sa.String(length=100), nullable=False),
    sa.Column('ratings', sa.Float(), nullable=True),
    sa.Column('history', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('renter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('profile_pic', sa.String(length=200), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('notification_preference', sa.String(length=100), nullable=True),
    sa.Column('payment_preference', sa.String(length=100), nullable=True),
    sa.Column('renting_place', sa.String(length=200), nullable=False),
    sa.Column('ratings', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('place_type', sa.String(length=50), nullable=False),
    sa.Column('amenities', sa.String(length=200), nullable=True),
    sa.Column('timing', sa.String(length=100), nullable=False),
    sa.Column('history', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('renter_id', sa.Integer(), nullable=False),
    sa.Column('place_name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('amenities', sa.String(length=200), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['renter_id'], ['renter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_owner_id', sa.Integer(), nullable=False),
    sa.Column('renter_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('preferred_date', sa.Date(), nullable=False),
    sa.Column('contact', sa.String(length=200), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='bookingstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['car_owner_id'], ['car_owner.id'], name='fk_booking_car_owner_id'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name='fk_booking_location_id'),
    sa.ForeignKeyConstraint(['renter_id'], ['renter.id'], name='fk_booking_renter_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_booking_car_owner_id'), ['car_owner_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_location_id'), ['location_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_booking_renter_id'), ['renter_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_booking_renter_id'))
        batch_op.drop_index(batch_op.f('ix_booking_location_id'))
        batch_op.drop_index(batch_op.f('ix_booking_car_owner_id'))

    op.drop_table('booking')
    op.drop_table('location')
    op.drop_table('renter')
    op.drop_table('car_owner')
    # ### end Alembic commands ###
